/**
* Nsmf_PDUSession
* SMF PDU Session Service. Â© 2019, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 
*
* The version of the OpenAPI document: 1.1.0.alpha-1
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Inline_object.h"

namespace oai {
namespace smf {
namespace model {

Inline_object::Inline_object()
{
    m_JsonDataIsSet = false;
    m_BinaryDataN1SmMessageIsSet = false;
    m_BinaryDataN2SmInformationIsSet = false;
    
}

Inline_object::~Inline_object()
{
}

void Inline_object::validate()
{
    // TODO: implement validation
}

void to_json(nlohmann::json& j, const Inline_object& o)
{
    j = nlohmann::json();
    if(o.jsonDataIsSet())
        j["jsonData"] = o.m_JsonData;
    if(o.binaryDataN1SmMessageIsSet())
        j["binaryDataN1SmMessage"] = o.m_BinaryDataN1SmMessage;
    if(o.binaryDataN2SmInformationIsSet())
        j["binaryDataN2SmInformation"] = o.m_BinaryDataN2SmInformation;
}

void from_json(const nlohmann::json& j, Inline_object& o)
{
    if(j.find("jsonData") != j.end())
    {
        j.at("jsonData").get_to(o.m_JsonData);
        o.m_JsonDataIsSet = true;
    } 
    if(j.find("binaryDataN1SmMessage") != j.end())
    {
        j.at("binaryDataN1SmMessage").get_to(o.m_BinaryDataN1SmMessage);
        o.m_BinaryDataN1SmMessageIsSet = true;
    } 
    if(j.find("binaryDataN2SmInformation") != j.end())
    {
        j.at("binaryDataN2SmInformation").get_to(o.m_BinaryDataN2SmInformation);
        o.m_BinaryDataN2SmInformationIsSet = true;
    } 
}

SmContextCreateData Inline_object::getJsonData() const
{
    return m_JsonData;
}
void Inline_object::setJsonData(SmContextCreateData const& value)
{
    m_JsonData = value;
    m_JsonDataIsSet = true;
}
bool Inline_object::jsonDataIsSet() const
{
    return m_JsonDataIsSet;
}
void Inline_object::unsetJsonData()
{
    m_JsonDataIsSet = false;
}
std::string Inline_object::getBinaryDataN1SmMessage() const
{
    return m_BinaryDataN1SmMessage;
}
void Inline_object::setBinaryDataN1SmMessage(std::string const& value)
{
    m_BinaryDataN1SmMessage = value;
    m_BinaryDataN1SmMessageIsSet = true;
}
bool Inline_object::binaryDataN1SmMessageIsSet() const
{
    return m_BinaryDataN1SmMessageIsSet;
}
void Inline_object::unsetBinaryDataN1SmMessage()
{
    m_BinaryDataN1SmMessageIsSet = false;
}
std::string Inline_object::getBinaryDataN2SmInformation() const
{
    return m_BinaryDataN2SmInformation;
}
void Inline_object::setBinaryDataN2SmInformation(std::string const& value)
{
    m_BinaryDataN2SmInformation = value;
    m_BinaryDataN2SmInformationIsSet = true;
}
bool Inline_object::binaryDataN2SmInformationIsSet() const
{
    return m_BinaryDataN2SmInformationIsSet;
}
void Inline_object::unsetBinaryDataN2SmInformation()
{
    m_BinaryDataN2SmInformationIsSet = false;
}

}
}
}

