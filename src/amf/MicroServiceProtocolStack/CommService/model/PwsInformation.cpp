/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PwsInformation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PwsInformation::PwsInformation()
{
    m_MessageIdentifier = 0;
    m_SerialNumber = 0;
    m_SendN2Container = false;
    m_SendN2ContainerIsSet = false;
    m_OmcId = "";
    m_OmcIdIsSet = false;
    
}

PwsInformation::~PwsInformation()
{
}

void PwsInformation::validate()
{
    // TODO: implement validation
}

nlohmann::json PwsInformation::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["messageIdentifier"] = m_MessageIdentifier;
    val["serialNumber"] = m_SerialNumber;
    val["pwsContainer"] = ModelBase::toJson(m_PwsContainer);
    if(m_SendN2ContainerIsSet)
    {
        val["sendN2Container"] = m_SendN2Container;
    }
    if(m_OmcIdIsSet)
    {
        val["omcId"] = ModelBase::toJson(m_OmcId);
    }
    

    return val;
}

void PwsInformation::fromJson(const nlohmann::json& val)
{
    setMessageIdentifier(val.at("messageIdentifier"));
    setSerialNumber(val.at("serialNumber"));
    if(val.find("sendN2Container") != val.end())
    {
        setSendN2Container(val.at("sendN2Container"));
    }
    if(val.find("omcId") != val.end())
    {
        setOmcId(val.at("omcId"));
    }
    
}


int32_t PwsInformation::getMessageIdentifier() const
{
    return m_MessageIdentifier;
}
void PwsInformation::setMessageIdentifier(int32_t const value)
{
    m_MessageIdentifier = value;
    
}
int32_t PwsInformation::getSerialNumber() const
{
    return m_SerialNumber;
}
void PwsInformation::setSerialNumber(int32_t const value)
{
    m_SerialNumber = value;
    
}
N2InfoContent PwsInformation::getPwsContainer() const
{
    return m_PwsContainer;
}
void PwsInformation::setPwsContainer(N2InfoContent const& value)
{
    m_PwsContainer = value;
    
}
bool PwsInformation::isSendN2Container() const
{
    return m_SendN2Container;
}
void PwsInformation::setSendN2Container(bool const value)
{
    m_SendN2Container = value;
    m_SendN2ContainerIsSet = true;
}
bool PwsInformation::sendN2ContainerIsSet() const
{
    return m_SendN2ContainerIsSet;
}
void PwsInformation::unsetSendN2Container()
{
    m_SendN2ContainerIsSet = false;
}
std::string PwsInformation::getOmcId() const
{
    return m_OmcId;
}
void PwsInformation::setOmcId(std::string const& value)
{
    m_OmcId = value;
    m_OmcIdIsSet = true;
}
bool PwsInformation::omcIdIsSet() const
{
    return m_OmcIdIsSet;
}
void PwsInformation::unsetOmcId()
{
    m_OmcIdIsSet = false;
}

}
}
}
}

