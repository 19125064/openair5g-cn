/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UeContext.h
 *
 * 
 */

#ifndef UeContext_H_
#define UeContext_H_


#include "ModelBase.h"

#include "SeafData.h"
#include "SmsSupport.h"
#include <string>
#include "PduSessionContext.h"
#include "AmfEventSubscription.h"
#include <vector>
#include "MmContext.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  UeContext
    : public ModelBase
{
public:
    UeContext();
    virtual ~UeContext();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// UeContext members

    /// <summary>
    /// 
    /// </summary>
    std::string getSupi() const;
    void setSupi(std::string const& value);
    bool supiIsSet() const;
    void unsetSupi();
    /// <summary>
    /// 
    /// </summary>
    bool isSupiUnauthInd() const;
    void setSupiUnauthInd(bool const value);
    bool supiUnauthIndIsSet() const;
    void unsetSupiUnauthInd();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string>& getGpsi();
    bool gpsiIsSet() const;
    void unsetGpsi();
    /// <summary>
    /// 
    /// </summary>
    std::string getPei() const;
    void setPei(std::string const& value);
    bool peiIsSet() const;
    void unsetPei();
    /// <summary>
    /// 
    /// </summary>
    std::vector<std::string>& getGroups();
    bool groupsIsSet() const;
    void unsetGroups();
    /// <summary>
    /// 
    /// </summary>
    std::string getDrxParameter() const;
    void setDrxParameter(std::string const& value);
    bool drxParameterIsSet() const;
    void unsetDrxParameter();
    /// <summary>
    /// 
    /// </summary>
    int32_t getSubRfsp() const;
    void setSubRfsp(int32_t const value);
    bool subRfspIsSet() const;
    void unsetSubRfsp();
    /// <summary>
    /// 
    /// </summary>
    int32_t getUsedRfsp() const;
    void setUsedRfsp(int32_t const value);
    bool usedRfspIsSet() const;
    void unsetUsedRfsp();
    /// <summary>
    /// 
    /// </summary>
    SmsSupport getSmsSupport() const;
    void setSmsSupport(SmsSupport const& value);
        /// <summary>
    /// 
    /// </summary>
    std::string getSmsfId() const;
    void setSmsfId(std::string const& value);
    bool smsfIdIsSet() const;
    void unsetSmsfId();
    /// <summary>
    /// 
    /// </summary>
    SeafData getSeafData() const;
    void setSeafData(SeafData const& value);
    bool seafDataIsSet() const;
    void unsetSeafData();
    /// <summary>
    /// 
    /// </summary>
    std::string getPcfId() const;
    void setPcfId(std::string const& value);
    bool pcfIdIsSet() const;
    void unsetPcfId();
    /// <summary>
    /// 
    /// </summary>
    std::string getHpcfId() const;
    void setHpcfId(std::string const& value);
    bool hpcfIdIsSet() const;
    void unsetHpcfId();
    /// <summary>
    /// 
    /// </summary>
    std::vector<AmfEventSubscription>& getEventSubscriptions();
    bool eventSubscriptionsIsSet() const;
    void unsetEventSubscriptions();
    /// <summary>
    /// 
    /// </summary>
    std::vector<MmContext>& getMmContexts();
    bool mmContextsIsSet() const;
    void unsetMmContexts();
    /// <summary>
    /// 
    /// </summary>
    std::vector<PduSessionContext>& getSessionContexts();
    bool sessionContextsIsSet() const;
    void unsetSessionContexts();

protected:
    std::string m_Supi;
    bool m_SupiIsSet;
    bool m_SupiUnauthInd;
    bool m_SupiUnauthIndIsSet;
    std::vector<std::string> m_Gpsi;
    bool m_GpsiIsSet;
    std::string m_Pei;
    bool m_PeiIsSet;
    std::vector<std::string> m_Groups;
    bool m_GroupsIsSet;
    std::string m_DrxParameter;
    bool m_DrxParameterIsSet;
    int32_t m_SubRfsp;
    bool m_SubRfspIsSet;
    int32_t m_UsedRfsp;
    bool m_UsedRfspIsSet;
    SmsSupport m_SmsSupport;

    std::string m_SmsfId;
    bool m_SmsfIdIsSet;
    SeafData m_SeafData;
    bool m_SeafDataIsSet;
    std::string m_PcfId;
    bool m_PcfIdIsSet;
    std::string m_HpcfId;
    bool m_HpcfIdIsSet;
    std::vector<AmfEventSubscription> m_EventSubscriptions;
    bool m_EventSubscriptionsIsSet;
    std::vector<MmContext> m_MmContexts;
    bool m_MmContextsIsSet;
    std::vector<PduSessionContext> m_SessionContexts;
    bool m_SessionContextsIsSet;
};

}
}
}
}

#endif /* UeContext_H_ */
