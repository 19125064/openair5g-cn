/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * UeContextCreatedData.h
 *
 * 
 */

#ifndef UeContextCreatedData_H_
#define UeContextCreatedData_H_


#include "ModelBase.h"

#include "N2SmInformation.h"
#include "UeContext.h"
#include <string>
#include "N2InfoContainer.h"
#include <vector>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  UeContextCreatedData
    : public ModelBase
{
public:
    UeContextCreatedData();
    virtual ~UeContextCreatedData();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// UeContextCreatedData members

    /// <summary>
    /// 
    /// </summary>
    UeContext getUeContext() const;
    void setUeContext(UeContext const& value);
        /// <summary>
    /// 
    /// </summary>
    N2InfoContainer getTargetToSourceData() const;
    void setTargetToSourceData(N2InfoContainer const& value);
        /// <summary>
    /// 
    /// </summary>
    std::vector<N2SmInformation>& getPduSessions();
        /// <summary>
    /// 
    /// </summary>
    int32_t getNgapCause() const;
    void setNgapCause(int32_t const value);
    bool ngapCauseIsSet() const;
    void unsetNgapCause();
    /// <summary>
    /// 
    /// </summary>
    std::vector<int32_t>& getFailedSessions();
    bool failedSessionsIsSet() const;
    void unsetFailedSessions();
    /// <summary>
    /// 
    /// </summary>
    std::string getSupportedFeatures() const;
    void setSupportedFeatures(std::string const& value);
    bool supportedFeaturesIsSet() const;
    void unsetSupportedFeatures();

protected:
    UeContext m_UeContext;

    N2InfoContainer m_TargetToSourceData;

    std::vector<N2SmInformation> m_PduSessions;

    int32_t m_NgapCause;
    bool m_NgapCauseIsSet;
    std::vector<int32_t> m_FailedSessions;
    bool m_FailedSessionsIsSet;
    std::string m_SupportedFeatures;
    bool m_SupportedFeaturesIsSet;
};

}
}
}
}

#endif /* UeContextCreatedData_H_ */
