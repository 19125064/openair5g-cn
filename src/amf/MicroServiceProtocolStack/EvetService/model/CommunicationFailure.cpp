/**
* Namf_EventExposure Service
* AMF Event Exposure Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "CommunicationFailure.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

CommunicationFailure::CommunicationFailure()
{
    m_NasReleaseCode = "";
    m_NasReleaseCodeIsSet = false;
    m_RanReleaseCode = 0;
    m_RanReleaseCodeIsSet = false;
    
}

CommunicationFailure::~CommunicationFailure()
{
}

void CommunicationFailure::validate()
{
    // TODO: implement validation
}

nlohmann::json CommunicationFailure::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_NasReleaseCodeIsSet)
    {
        val["nasReleaseCode"] = ModelBase::toJson(m_NasReleaseCode);
    }
    if(m_RanReleaseCodeIsSet)
    {
        val["ranReleaseCode"] = m_RanReleaseCode;
    }
    

    return val;
}

void CommunicationFailure::fromJson(const nlohmann::json& val)
{
    if(val.find("nasReleaseCode") != val.end())
    {
        setNasReleaseCode(val.at("nasReleaseCode"));
    }
    if(val.find("ranReleaseCode") != val.end())
    {
        setRanReleaseCode(val.at("ranReleaseCode"));
    }
    
}


std::string CommunicationFailure::getNasReleaseCode() const
{
    return m_NasReleaseCode;
}
void CommunicationFailure::setNasReleaseCode(std::string const& value)
{
    m_NasReleaseCode = value;
    m_NasReleaseCodeIsSet = true;
}
bool CommunicationFailure::nasReleaseCodeIsSet() const
{
    return m_NasReleaseCodeIsSet;
}
void CommunicationFailure::unsetNasReleaseCode()
{
    m_NasReleaseCodeIsSet = false;
}
int32_t CommunicationFailure::getRanReleaseCode() const
{
    return m_RanReleaseCode;
}
void CommunicationFailure::setRanReleaseCode(int32_t const value)
{
    m_RanReleaseCode = value;
    m_RanReleaseCodeIsSet = true;
}
bool CommunicationFailure::ranReleaseCodeIsSet() const
{
    return m_RanReleaseCodeIsSet;
}
void CommunicationFailure::unsetRanReleaseCode()
{
    m_RanReleaseCodeIsSet = false;
}

}
}
}
}

