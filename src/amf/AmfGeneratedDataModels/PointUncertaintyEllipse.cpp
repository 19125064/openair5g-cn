/**
* AMF Location Service
* AMF Location Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PointUncertaintyEllipse.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PointUncertaintyEllipse::PointUncertaintyEllipse()
{
    m_Confidence = 0;
    
}

PointUncertaintyEllipse::~PointUncertaintyEllipse()
{
}

void PointUncertaintyEllipse::validate()
{
    // TODO: implement validation
}

nlohmann::json PointUncertaintyEllipse::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["shape"] = ModelBase::toJson(m_Shape);
    val["point"] = ModelBase::toJson(m_Point);
    val["uncertaintyEllipse"] = ModelBase::toJson(m_UncertaintyEllipse);
    val["confidence"] = m_Confidence;
    

    return val;
}

void PointUncertaintyEllipse::fromJson(const nlohmann::json& val)
{
    setConfidence(val.at("confidence"));
    
}


SupportedGADShapes PointUncertaintyEllipse::getShape() const
{
    return m_Shape;
}
void PointUncertaintyEllipse::setShape(SupportedGADShapes const& value)
{
    m_Shape = value;
    
}
GeographicalCoordinates PointUncertaintyEllipse::getPoint() const
{
    return m_Point;
}
void PointUncertaintyEllipse::setPoint(GeographicalCoordinates const& value)
{
    m_Point = value;
    
}
UncertaintyEllipse PointUncertaintyEllipse::getUncertaintyEllipse() const
{
    return m_UncertaintyEllipse;
}
void PointUncertaintyEllipse::setUncertaintyEllipse(UncertaintyEllipse const& value)
{
    m_UncertaintyEllipse = value;
    
}
int32_t PointUncertaintyEllipse::getConfidence() const
{
    return m_Confidence;
}
void PointUncertaintyEllipse::setConfidence(int32_t const value)
{
    m_Confidence = value;
    
}

}
}
}
}

