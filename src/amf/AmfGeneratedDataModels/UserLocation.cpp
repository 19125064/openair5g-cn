/**
* Namf_EventExposure Service
* AMF Event Exposure Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "UserLocation.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

UserLocation::UserLocation()
{
    m_EutraLocationIsSet = false;
    m_NrLocationIsSet = false;
    m_N3gaLocationIsSet = false;
    
}

UserLocation::~UserLocation()
{
}

void UserLocation::validate()
{
    // TODO: implement validation
}

nlohmann::json UserLocation::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    if(m_EutraLocationIsSet)
    {
        val["eutraLocation"] = ModelBase::toJson(m_EutraLocation);
    }
    if(m_NrLocationIsSet)
    {
        val["nrLocation"] = ModelBase::toJson(m_NrLocation);
    }
    if(m_N3gaLocationIsSet)
    {
        val["n3gaLocation"] = ModelBase::toJson(m_N3gaLocation);
    }
    

    return val;
}

void UserLocation::fromJson(const nlohmann::json& val)
{
    if(val.find("eutraLocation") != val.end())
    {
        if(!val["eutraLocation"].is_null())
        {
            EutraLocation newItem;
            newItem.fromJson(val["eutraLocation"]);
            setEutraLocation( newItem );
        }
        
    }
    if(val.find("nrLocation") != val.end())
    {
        if(!val["nrLocation"].is_null())
        {
            NrLocation newItem;
            newItem.fromJson(val["nrLocation"]);
            setNrLocation( newItem );
        }
        
    }
    if(val.find("n3gaLocation") != val.end())
    {
        if(!val["n3gaLocation"].is_null())
        {
            N3gaLocation newItem;
            newItem.fromJson(val["n3gaLocation"]);
            setN3gaLocation( newItem );
        }
        
    }
    
}


EutraLocation UserLocation::getEutraLocation() const
{
    return m_EutraLocation;
}
void UserLocation::setEutraLocation(EutraLocation const& value)
{
    m_EutraLocation = value;
    m_EutraLocationIsSet = true;
}
bool UserLocation::eutraLocationIsSet() const
{
    return m_EutraLocationIsSet;
}
void UserLocation::unsetEutraLocation()
{
    m_EutraLocationIsSet = false;
}
NrLocation UserLocation::getNrLocation() const
{
    return m_NrLocation;
}
void UserLocation::setNrLocation(NrLocation const& value)
{
    m_NrLocation = value;
    m_NrLocationIsSet = true;
}
bool UserLocation::nrLocationIsSet() const
{
    return m_NrLocationIsSet;
}
void UserLocation::unsetNrLocation()
{
    m_NrLocationIsSet = false;
}
N3gaLocation UserLocation::getN3gaLocation() const
{
    return m_N3gaLocation;
}
void UserLocation::setN3gaLocation(N3gaLocation const& value)
{
    m_N3gaLocation = value;
    m_N3gaLocationIsSet = true;
}
bool UserLocation::n3gaLocationIsSet() const
{
    return m_N3gaLocationIsSet;
}
void UserLocation::unsetN3gaLocation()
{
    m_N3gaLocationIsSet = false;
}

}
}
}
}

