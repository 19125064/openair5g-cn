/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "N1MessageNotification.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

N1MessageNotification::N1MessageNotification()
{
    m_N1NotifySubscriptionId = "";
    m_RegistrationCtxtContainerIsSet = false;
    
}

N1MessageNotification::~N1MessageNotification()
{
}

void N1MessageNotification::validate()
{
    // TODO: implement validation
}

nlohmann::json N1MessageNotification::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["n1NotifySubscriptionId"] = ModelBase::toJson(m_N1NotifySubscriptionId);
    val["n1MessageContainer"] = ModelBase::toJson(m_N1MessageContainer);
    if(m_RegistrationCtxtContainerIsSet)
    {
        val["registrationCtxtContainer"] = ModelBase::toJson(m_RegistrationCtxtContainer);
    }
    

    return val;
}

void N1MessageNotification::fromJson(const nlohmann::json& val)
{
    setN1NotifySubscriptionId(val.at("n1NotifySubscriptionId"));
    if(val.find("registrationCtxtContainer") != val.end())
    {
        if(!val["registrationCtxtContainer"].is_null())
        {
            RegistrationContextContainer newItem;
            newItem.fromJson(val["registrationCtxtContainer"]);
            setRegistrationCtxtContainer( newItem );
        }
        
    }
    
}


std::string N1MessageNotification::getN1NotifySubscriptionId() const
{
    return m_N1NotifySubscriptionId;
}
void N1MessageNotification::setN1NotifySubscriptionId(std::string const& value)
{
    m_N1NotifySubscriptionId = value;
    
}
N1MessageContainer N1MessageNotification::getN1MessageContainer() const
{
    return m_N1MessageContainer;
}
void N1MessageNotification::setN1MessageContainer(N1MessageContainer const& value)
{
    m_N1MessageContainer = value;
    
}
RegistrationContextContainer N1MessageNotification::getRegistrationCtxtContainer() const
{
    return m_RegistrationCtxtContainer;
}
void N1MessageNotification::setRegistrationCtxtContainer(RegistrationContextContainer const& value)
{
    m_RegistrationCtxtContainer = value;
    m_RegistrationCtxtContainerIsSet = true;
}
bool N1MessageNotification::registrationCtxtContainerIsSet() const
{
    return m_RegistrationCtxtContainerIsSet;
}
void N1MessageNotification::unsetRegistrationCtxtContainer()
{
    m_RegistrationCtxtContainerIsSet = false;
}

}
}
}
}

