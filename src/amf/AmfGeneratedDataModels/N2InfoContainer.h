/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * N2InfoContainer.h
 *
 * 
 */

#ifndef N2InfoContainer_H_
#define N2InfoContainer_H_


#include "ModelBase.h"

#include "N2InformationClass.h"
#include "N2SmInformation.h"
#include "NrppaInformation.h"
#include "PwsInformation.h"
#include <vector>
#include "AreaOfValidity.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  N2InfoContainer
    : public ModelBase
{
public:
    N2InfoContainer();
    virtual ~N2InfoContainer();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    nlohmann::json toJson() const override;
    void fromJson(const nlohmann::json& json) override;

    /////////////////////////////////////////////
    /// N2InfoContainer members

    /// <summary>
    /// 
    /// </summary>
    N2InformationClass getN2InformationClass() const;
    void setN2InformationClass(N2InformationClass const& value);
        /// <summary>
    /// 
    /// </summary>
    std::vector<N2SmInformation>& getSmInfo();
    bool smInfoIsSet() const;
    void unsetSmInfo();
    /// <summary>
    /// 
    /// </summary>
    NrppaInformation getNrppaInfo() const;
    void setNrppaInfo(NrppaInformation const& value);
    bool nrppaInfoIsSet() const;
    void unsetNrppaInfo();
    /// <summary>
    /// 
    /// </summary>
    PwsInformation getPwsInfo() const;
    void setPwsInfo(PwsInformation const& value);
    bool pwsInfoIsSet() const;
    void unsetPwsInfo();
    /// <summary>
    /// 
    /// </summary>
    AreaOfValidity getAreaOfValidity() const;
    void setAreaOfValidity(AreaOfValidity const& value);
    bool areaOfValidityIsSet() const;
    void unsetAreaOfValidity();

protected:
    N2InformationClass m_N2InformationClass;

    std::vector<N2SmInformation> m_SmInfo;
    bool m_SmInfoIsSet;
    NrppaInformation m_NrppaInfo;
    bool m_NrppaInfoIsSet;
    PwsInformation m_PwsInfo;
    bool m_PwsInfoIsSet;
    AreaOfValidity m_AreaOfValidity;
    bool m_AreaOfValidityIsSet;
};

}
}
}
}

#endif /* N2InfoContainer_H_ */
