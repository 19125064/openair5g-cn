/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "N2InformationTransferRspData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

N2InformationTransferRspData::N2InformationTransferRspData()
{
    m_PwsRspDataIsSet = false;
    m_SupportedFeatures = "";
    m_SupportedFeaturesIsSet = false;
    
}

N2InformationTransferRspData::~N2InformationTransferRspData()
{
}

void N2InformationTransferRspData::validate()
{
    // TODO: implement validation
}

nlohmann::json N2InformationTransferRspData::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["result"] = ModelBase::toJson(m_Result);
    if(m_PwsRspDataIsSet)
    {
        val["pwsRspData"] = ModelBase::toJson(m_PwsRspData);
    }
    if(m_SupportedFeaturesIsSet)
    {
        val["supportedFeatures"] = ModelBase::toJson(m_SupportedFeatures);
    }
    

    return val;
}

void N2InformationTransferRspData::fromJson(const nlohmann::json& val)
{
    if(val.find("pwsRspData") != val.end())
    {
        if(!val["pwsRspData"].is_null())
        {
            PWSResponseData newItem;
            newItem.fromJson(val["pwsRspData"]);
            setPwsRspData( newItem );
        }
        
    }
    if(val.find("supportedFeatures") != val.end())
    {
        setSupportedFeatures(val.at("supportedFeatures"));
    }
    
}


N2InformationTransferResult N2InformationTransferRspData::getResult() const
{
    return m_Result;
}
void N2InformationTransferRspData::setResult(N2InformationTransferResult const& value)
{
    m_Result = value;
    
}
PWSResponseData N2InformationTransferRspData::getPwsRspData() const
{
    return m_PwsRspData;
}
void N2InformationTransferRspData::setPwsRspData(PWSResponseData const& value)
{
    m_PwsRspData = value;
    m_PwsRspDataIsSet = true;
}
bool N2InformationTransferRspData::pwsRspDataIsSet() const
{
    return m_PwsRspDataIsSet;
}
void N2InformationTransferRspData::unsetPwsRspData()
{
    m_PwsRspDataIsSet = false;
}
std::string N2InformationTransferRspData::getSupportedFeatures() const
{
    return m_SupportedFeatures;
}
void N2InformationTransferRspData::setSupportedFeatures(std::string const& value)
{
    m_SupportedFeatures = value;
    m_SupportedFeaturesIsSet = true;
}
bool N2InformationTransferRspData::supportedFeaturesIsSet() const
{
    return m_SupportedFeaturesIsSet;
}
void N2InformationTransferRspData::unsetSupportedFeatures()
{
    m_SupportedFeaturesIsSet = false;
}

}
}
}
}

