/**
* AMF Communicaiton Service
* AMF Communication Service
*
* OpenAPI spec version: 1.R15.0.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "PWSResponseData.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

PWSResponseData::PWSResponseData()
{
    m_NgapMessageType = 0;
    m_SerialNumber = 0;
    m_MessageIdentifier = 0;
    m_UnknownTaiListIsSet = false;
    
}

PWSResponseData::~PWSResponseData()
{
}

void PWSResponseData::validate()
{
    // TODO: implement validation
}

nlohmann::json PWSResponseData::toJson() const
{
    nlohmann::json val = nlohmann::json::object();

    val["ngapMessageType"] = m_NgapMessageType;
    val["serialNumber"] = m_SerialNumber;
    val["messageIdentifier"] = m_MessageIdentifier;
    {
        nlohmann::json jsonArray;
        for( auto& item : m_UnknownTaiList )
        {
            jsonArray.push_back(ModelBase::toJson(item));
        }
        
        if(jsonArray.size() > 0)
        {
            val["unknownTaiList"] = jsonArray;
        } 
    }
    

    return val;
}

void PWSResponseData::fromJson(const nlohmann::json& val)
{
    setNgapMessageType(val.at("ngapMessageType"));
    setSerialNumber(val.at("serialNumber"));
    setMessageIdentifier(val.at("messageIdentifier"));
    {
        m_UnknownTaiList.clear();
        if(val.find("unknownTaiList") != val.end())
        {
            for( auto& item : val["unknownTaiList"] )
            {
                
                if(item.is_null())
                {
                    m_UnknownTaiList.push_back( Tai() );
                }
                else
                {
                    Tai newItem;
                    newItem.fromJson(item);
                    m_UnknownTaiList.push_back( newItem );
                }
                
            }
        }
    }
    
}


int32_t PWSResponseData::getNgapMessageType() const
{
    return m_NgapMessageType;
}
void PWSResponseData::setNgapMessageType(int32_t const value)
{
    m_NgapMessageType = value;
    
}
int32_t PWSResponseData::getSerialNumber() const
{
    return m_SerialNumber;
}
void PWSResponseData::setSerialNumber(int32_t const value)
{
    m_SerialNumber = value;
    
}
int32_t PWSResponseData::getMessageIdentifier() const
{
    return m_MessageIdentifier;
}
void PWSResponseData::setMessageIdentifier(int32_t const value)
{
    m_MessageIdentifier = value;
    
}
std::vector<Tai>& PWSResponseData::getUnknownTaiList()
{
    return m_UnknownTaiList;
}
bool PWSResponseData::unknownTaiListIsSet() const
{
    return m_UnknownTaiListIsSet;
}
void PWSResponseData::unsetUnknownTaiList()
{
    m_UnknownTaiListIsSet = false;
}

}
}
}
}

